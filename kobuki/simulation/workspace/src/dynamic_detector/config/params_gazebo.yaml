dynamic_detector:
    ros__parameters:
        verbose: true                                                      # printing info about detections if true
        input_topic: /dynamic_detector/input                               # topic with depth and mask
        pc2_topic: /dynamic_detector/point_cloud2                          # topic with pc2 for visualizing dynamic obstacles
        box_topic: /dynamic_detector/internal/boxes                        # 3d bounding boxes in camera_link_optical frame
        obstacles_fp_topic: /dynamic_detector/obstacles_footprints         # topic with dynamic obstacles footpints for tracking node
        bb_image_topic: /dynamic_detector/bb_image                         # topic with bounding boxes image
        dyn_depth_topic: /dynamic_detector/dyn_depth                       # topic with dynamic depth image
        danger_distance_topic: /dynamic_controller/danger_distance         # topic with bool value if distance from dynamic controller danger
        range_max: 20.0                                                    # depth camera max range
        camera_link_optical_frame: camera_link_optical                     # robot's camera_link_optical_frame
        use_lifetime: false                                                # use lifetime if true

obstacles_tracker:
    ros__parameters:
        verbose: true                                                      # printing info about tracking if true
        footprints_topic: /dynamic_detector/obstacles_footprints           # topic with dynamic obstacles footprint coordinates
        map_sub_topic: /rtabmap/map                                        # topic with occupancy grid map from static slam
        map_pub_topic: /dynamic_detector/map                               # topic with dynamic occupancy grid map
        local_costmap_sub_topic: /local_costmap/costmap                    # topic with local_costmap from nav2
        costmap_circles_topic: /dynamic_detector/local_costmap/obstacles   # topic with with dynamic obstacles footprint circles
        remap_local_costmap_topic: /dynamic_detector/local_costmap         # local_costmap in map frame
        box_sub_topic: /dynamic_detector/internal/boxes                    # 3d bounding boxes coordinates in camera_link_optical frame
        box_pub_topic: /dynamic_detector/boxes                             # 3d bounding boxes coordinates in map frame
        min_distance_topic: /dynamic_detector/min_distance                 # topic with min_distance to dynamic obstacles
        map_frame: map                                                     # slam's map frame
        odom_frame: odom                                                   # robot's odom frame
        camera_link_optical_frame: camera_link_optical                     # robot's camera_link_optical_frame
        obstacle_offset: 0.00                                              # increases radius of dynamic obstacles footprint 
        unoccupied_value: 0                                                # unoccupied value in OccupancyGrid
        occupied_value: 100                                                # occupied value in OccupancyGrid
        unknown_value: -1                                                  # unknown value in OccupancyGrid
        lost_memory_time: 5                                                # time while lost dynamic obstacles are being displayed on map
        use_lifetime: false                                                # use lifetime if true
        bb_lifetime: 30                                                    # lifetime of 3d bounding box in ms

pc2_visualizer:
    ros__parameters:
        input_topic: /dynamic_detector/input                               # topic with depth and mask
        pc2_topic: /dynamic_detector/point_cloud2                          # topic with pc2 for visualizing dynamic obstacles
        range_max: 20.0                                                    # depth camera max range
        # map_frame: map                                                     # slam's map frame
        camera_link_optical_frame: camera_link_optical                     # robot's camera_link_optical_frame
